name: Build Cemu

on:
  workflow_call:
    inputs:
      next_version_major:
        required: false
        type: string
      next_version_minor:
        required: false
        type: string

env:
  VCPKG_ROOT: ${{ github.workspace }}/dependencies/vcpkg
  VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,readwrite"

jobs:
  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-15 cmake ninja-build nasm libwxgtk3.2-dev libgtk-3-dev libsdl2-dev libcurl4-openssl-dev libzip-dev libzstd-dev libpng-dev libfmt-dev libssl-dev libhidapi-dev libbluetooth-dev libopenal-dev libsoundtouch-dev libgamemode-dev libwayland-dev wayland-protocols extra-cmake-modules

      - name: Setup vcpkg and nuget
        uses: ./.github/actions/setup-vcpkg
        with:
          nuget_user: ${{ secrets.VCPKG_NUGET_USER }}
          nuget_token: ${{ secrets.VCPKG_NUGET_TOKEN }}

      - name: Configure
        run: >
          cmake -S . -B build -G Ninja
          -DCMAKE_C_COMPILER=clang-15
          -DCMAKE_CXX_COMPILER=clang++-15
          -DCMAKE_BUILD_TYPE=Release
          -DEMULATOR_VERSION_MAJOR=${{ inputs.next_version_major }}
          -DEMULATOR_VERSION_MINOR=${{ inputs.next_version_minor }}

      - name: Build
        run: cmake --build build --config Release

      - name: Rename binary
        run: mv build/src/Cemu_release build/src/Cemu

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cemu-bin-linux-x64
          path: build/src/Cemu

  build-appimage:
    name: Build AppImage
    needs: build-ubuntu
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: cemu-bin-linux-x64
          path: .

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2

      - name: Build AppImage
        run: ./dist/linux/appimage.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cemu-appimage-x64
          path: Cemu-*.AppImage

  build-windows:
    name: Build on Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup vcpkg and nuget
        uses: ./.github/actions/setup-vcpkg
        with:
          nuget_user: ${{ secrets.VCPKG_NUGET_USER }}
          nuget_token: ${{ secrets.VCPKG_NUGET_TOKEN }}

      - name: Configure
        run: >
          cmake -S . -B build -A x64
          -DCMAKE_BUILD_TYPE=Release
          -DEMULATOR_VERSION_MAJOR=${{ inputs.next_version_major }}
          -DEMULATOR_VERSION_MINOR=${{ inputs.next_version_minor }}

      - name: Build
        run: cmake --build build --config Release

      - name: Rename binary
        run: mv build/src/Release/Cemu_release.exe build/src/Release/Cemu.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cemu-bin-windows-x64
          path: build/src/Release/Cemu.exe

  build-macos:
    name: Build on macOS
    runs-on: macos-14
    strategy:
      matrix:
        arch: [x86_64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: brew install ninja nasm

      - name: Install MoltenVK
        run: |
          wget https://github.com/KhronosGroup/MoltenVK/releases/download/v1.2.5/MoltenVK-1.2.5.dmg
          hdiutil attach MoltenVK-1.2.5.dmg
          sudo /Volumes/MoltenVK/installMoltenVK / --destination /usr/local

      - name: Setup vcpkg and nuget
        uses: ./.github/actions/setup-vcpkg
        with:
          nuget_user: ${{ secrets.VCPKG_NUGET_USER }}
          nuget_token: ${{ secrets.VCPKG_NUGET_TOKEN }}

      - name: Configure
        run: >
          cmake -S . -B build -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}
          -DMACOS_BUNDLE=ON
          -DEMULATOR_VERSION_MAJOR=${{ inputs.next_version_major }}
          -DEMULATOR_VERSION_MINOR=${{ inputs.next_version_minor }}

      - name: Build
        run: cmake --build build --config Release

      - name: Prepare artifact
        run: |
          mkdir -p artifact
          mv build/src/Cemu_release.app artifact/Cemu.app
          hdiutil create -fs HFS+ -volname "Cemu" -srcfolder artifact Cemu.dmg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cemu-bin-macos-${{ matrix.arch }}
          path: Cemu.dmg